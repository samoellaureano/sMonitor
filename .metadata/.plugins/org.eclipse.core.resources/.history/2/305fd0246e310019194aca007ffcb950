package br.com.agendaContatoRest;

@Path("contatoRest")//Caminho URI da classe Rest utilizada.
public class ContatoRest extends UtilRest{

	public ContatoRest(){
	}

	@POST//Processará as requisições enviadas pelo método post.
	@Path("/addContato")/*Caminho URI do método da classe que
	 *receberá os dados do formulário que
	 *os armazenará em sua respectiva classe
	 *e os incluirá no banco de dados.
	 */

	@Consumes("application/*")/*Caminho URI que identifica o tipo de
	 *mídia enviado pelo lado cliente, no
	 *caso, informações do formulario no
	 *formato de aplicação.
	 */

	public Response addContato(String contatoParam){
		try{
			/*
			 * Instancia a classe ObjectMapper e chama o método readValue()
			 * leitura dos valores repassados pelo cliente no formato JSON,
			 * no caso os campos do formulário e atribui os valores destes
			 * campos aos atributos da classe Contato.
			 * Os valores obtidos do formulario são armazenados em atributos
			 * javascript, esses atributos por sua vez devem obrigatóriamente
			 * ter o mesmo nome dos atributos da classe Java correspondente
			 * Com isso é possivel a realização de um "de-para" dos valores
			 * contidos no objeto JSON (contatoParam) para um objeto da
			 * classe Contato.
			 * Aqui, importante observação de que o nome dos atributos
			 * declarados na classe, que irão receber os valores dos campos
			 * do formulário, sejam declarados de maneira identica ao nome
			 * dos campos do formulário que enviará seus valores.
			 */

			Contato contato = new ObjectMapper().readValue(contatoParam, Contato.class);

			//Chamar o método que grava o objeto contato no banco de dados

			Conexao conec = new Conexao();
			Connetion conexao = conec.abrirConexao();
			JDBCContatoDAO jdbcContato = new JDBCContatoDAO(conexao);
			jdbcContato.inserir(contato);
			conec.fecharConexao();

			/*
			 * Envia como retorno para o método buildResponse() a mensagem
			 * "Contato cadastrado com sucesso", no caso de sucesso da inclusão.
			 * Também retorna para o método buildErrorResponse() uma mensagem
			 * interna de erro, no caso do erro ocorrido durante a inclusão.
			 */

			return this.buildResponse("Contato cadastrado com sucesso.");
		}catch(Exception e){
			e.printStackTrace();
			return this.buildErrorResponse(e.getMessage());
		}
	}
}//Finalizar a classe
